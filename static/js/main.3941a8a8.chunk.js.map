{"version":3,"sources":["components/Box.jsx","App.js","reportWebVitals.js","index.js"],"names":["quotes","author","quote","colors","Box","useState","Math","floor","random","frase","setFrase","color","setColor","style","width","minHeight","backgroundColor","display","alignItems","justifyContent","transition","className","onClick","indx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEMA,EAAS,CACX,CACIC,OAAO,iBACPC,MAAM,6FAEV,CACID,OAAO,cACPC,MAAM,8DAEV,CACID,OAAO,cACPC,MAAM,qKAEV,CACID,OAAO,oBACPC,MAAM,8EAEV,CACID,OAAO,gBACPC,MAAM,uIAEV,CACID,OAAO,gBACPC,MAAM,4GAEV,CACID,OAAO,cACPC,MAAM,8DAGRC,EAAS,CAAC,MAAM,SAAS,QAAQ,OAAO,SAAS,UAgCxCC,EA/BH,WAER,MAAyBC,mBAASL,EAAOM,KAAKC,MAAoB,EAAdD,KAAKE,YAAzD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBL,mBAASF,EAAOG,KAAKC,MAAoB,EAAdD,KAAKE,YAAzD,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAQ,CACVC,MAAM,OACNC,UAAU,QACVC,gBAAgB,GAAD,OAAIL,GACnBM,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,WAAW,YAOf,OACI,qBAAKP,MAAOA,EAAZ,SACI,sBAAKQ,UAAU,YAAf,UACI,kCAAKZ,EAAMP,MAAX,OACA,qCAAQO,EAAMR,UAAc,uBAC5B,wBAAQqB,QAVJ,WACZ,IAAIC,EAAOjB,KAAKC,MAAqB,EAAdD,KAAKE,UAC5BE,EAASV,EAAOuB,IAChBX,EAAST,EAAOG,KAAKC,MAAoB,EAAdD,KAAKE,aAOGa,UAAU,MAArC,6BC9CDG,EARH,WAER,OACI,8BACI,cAAC,EAAD,OCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3941a8a8.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst quotes = [\r\n    {\r\n        author:`Nelson Mandela`,\r\n        quote:`The greatest glory in living lies not in never falling, but in rising every time we fall.`\r\n    },\r\n    {\r\n        author:'Walt Disney',\r\n        quote: `The way to get started is to quit talking and begin doing.` \r\n    },\r\n    {\r\n        author:'Seteve Jobs',\r\n        quote:`Your time is limited, so don't waste it living someone else's life. Don't be trapped by dogma â€“ which is living with the results of other people's thinking.`\r\n    },\r\n    {\r\n        author:'Eleanor Roosevelt',\r\n        quote:`If life were predictable it would cease to be life, and be without flavor.`\r\n    },\r\n    {\r\n        author:'Oprah Winfrey',\r\n        quote:`If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough`\r\n    },\r\n    {\r\n        author:'James Cameron',\r\n        quote:`If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success.`\r\n    },\r\n    {\r\n        author:'John Lennon',\r\n        quote:`Life is what happens when you're busy making other plans.`\r\n    }\r\n]\r\nconst colors = ['red','yellow','green','blue','orange','violet'];\r\nconst Box = ()=>{\r\n\r\n    const [frase,setFrase] = useState(quotes[Math.floor(Math.random()*7)]);\r\n    const [color,setColor] = useState(colors[Math.floor(Math.random()*5)]);\r\n    \r\n    const style = {\r\n        width:'100%',\r\n        minHeight:'100vh',\r\n        backgroundColor:`${color}`,\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        transition:'0.5s all'\r\n    }\r\n    const newQuote =()=>{\r\n        let indx = Math.floor((Math.random()*7));\r\n        setFrase(quotes[indx]);\r\n        setColor(colors[Math.floor(Math.random()*5)])\r\n    }\r\n    return(\r\n        <div style={style}>\r\n            <div className='quote_box'>\r\n                <p>\"{frase.quote}\"</p>\r\n                <cite>-{frase.author}</cite><br/>\r\n                <button onClick={newQuote} className='btn'>New Quote</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Box;","import React from 'react';\r\nimport Box from './components/Box';\r\n\r\nconst App = ()=>{\r\n    \r\n    return (\r\n        <div>\r\n            <Box/>\r\n        </div>\r\n    );\r\n};\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}